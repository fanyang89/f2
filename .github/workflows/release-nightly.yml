name: Release nightly

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  create_nightly_tag:
    name: Create nightly tag for master branch
    runs-on: ubuntu-latest
    if: github.ref_type == 'branch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Load .env file
        uses: xom9ikk/dotenv@v2.3.0
        with:
          load-mode: strict

      - name: Update nightly tag
        run: |
          git tag -d ${{ env.NIGHTLY_TAG }} || true
          git push origin :refs/tags/${{ env.NIGHTLY_TAG }} || true
          git tag ${{ env.NIGHTLY_TAG }}
          git push origin ${{ env.NIGHTLY_TAG }}

  release_nightly:
    needs: create_nightly_tag
    name: Release nightly version
    runs-on: ubuntu-latest
    env:
      GH_REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Load .env file
        uses: xom9ikk/dotenv@v2.3.0
        with:
          load-mode: strict

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false
          check-latest: true

      - name: Delete existing nightly release
        run: |
          gh release delete nightly --yes || true

      - name: Create nightly release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: refs/tags/${{ env.NIGHTLY_TAG }}
          name: Development build (master)
          body: |
            This build is directly sourced from the `master` branch in active development. As such, it may include experimental features and potential bugs.
          draft: false
          prerelease: true

      - name: Build assets with Goreleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: ~> v2
          args: release --clean --snapshot

      - name: Upload assets to nightly release
        run: gh release upload ${{ env.NIGHTLY_TAG }} dist/{*.tar.gz,*.zip,*.tar.zst,*.deb,*.rpm,*.apk,checksums.txt} --clobber
